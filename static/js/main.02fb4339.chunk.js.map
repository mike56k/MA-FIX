{"version":3,"sources":["App.js","index.js"],"names":["App","props","getImage","a","image","document","getElementById","value","console","log","setState","state","user","bridge","send","then","activePanel","id","this","status","before","size","src","photo_100","first_name","header","mode","weight","type","onClick","style","textAlign","alt","React","Component","ReactDOM","render"],"mappings":"uTA2FeA,G,yDAvEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAcRC,SAfmB,sBAeR,4BAAAC,EAAA,sDACHC,EAAQC,SAASC,eAAe,OAAOC,MAE7CC,QAAQC,IAAI,CAAEL,UAEVA,GACF,EAAKM,SAAS,CAAEN,MAAOA,IANhB,2CAZT,EAAKO,MAAQ,CACXC,KAAM,KACNR,MAAO,MALQ,E,gEASE,IAAD,OAClBS,IAAOC,KAAK,uBAAuBC,MAAK,SAACH,GACvC,EAAKF,SAAS,CAAEE,KAAMA,S,+BAexB,OACE,kBAAC,IAAD,CAAMI,YAAY,QAChB,kBAAC,IAAD,CAAOC,GAAG,QACR,kBAAC,IAAD,KACGC,KAAKP,MAAMC,KACV,kBAAC,IAAD,CACEO,OAAO,wBACPC,OAAQ,kBAAC,IAAD,CAAQC,KAAM,GAAIC,IAAKJ,KAAKP,MAAMC,KAAKW,aAE9CL,KAAKP,MAAMC,KAAKY,YAGnB,yBAIJ,kBAAC,IAAD,CAAOC,OAAQ,kBAAC,IAAD,CAAQC,KAAK,aAAb,+CACb,kBAAC,IAAD,8FACA,kBAAC,IAAD,yTAC0D,IACxD,kBAAC,IAAD,CAAMC,OAAO,YAAb,kCAA8D,IAFhE,2QAOA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,OAAOX,GAAG,QAEtB,kBAAC,IAAD,CAAQI,KAAK,KAAKQ,QAASX,KAAKhB,UAAhC,2DAKDgB,KAAKP,MAAMP,OACV,kBAAC,IAAD,CAAK0B,MAAO,CAAEC,UAAW,WACvB,yBAAKT,IAAKJ,KAAKP,MAAMP,MAAO4B,IAAI,wB,GA9D9BC,IAAMC,YCZxBrB,IAAOC,KAAK,gBAEZqB,IAASC,OAAO,kBAAC,EAAD,MAAS/B,SAASC,eAAe,W","file":"static/js/main.02fb4339.chunk.js","sourcesContent":["import React from \"react\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport {\n  Avatar,\n  Button,\n  Div,\n  FormLayout,\n  Group,\n  Header,\n  Input,\n  Panel,\n  PanelHeader,\n  PanelHeaderContent,\n  Text,\n  View,\n} from \"@vkontakte/vkui\";\n\nimport \"@vkontakte/vkui/dist/vkui.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: null,\n      image: null,\n    };\n  }\n\n  componentDidMount() {\n    bridge.send(\"VKWebAppGetUserInfo\").then((user) => {\n      this.setState({ user: user });\n    });\n  }\n\n  getImage = async () => {\n    const image = document.getElementById(\"url\").value;\n\n    console.log({ image });\n\n    if (image) {\n      this.setState({ image: image });\n    }\n  };\n\n  render() {\n    return (\n      <View activePanel=\"main\">\n        <Panel id=\"main\">\n          <PanelHeader>\n            {this.state.user ? (\n              <PanelHeaderContent\n                status=\"VK Apps Image Example\"\n                before={<Avatar size={36} src={this.state.user.photo_100} />}\n              >\n                {this.state.user.first_name}\n              </PanelHeaderContent>\n            ) : (\n              \"VK Apps Image Example\"\n            )}\n          </PanelHeader>\n\n          <Group header={<Header mode=\"secondary\">Задание</Header>}>\n            <Div>Изменил ААААААА</Div>\n            <Div>\n              Для облегчения тестирования можно использовать картинку{\" \"}\n              <Text weight=\"semibold\">https://service.pavel.im/image</Text>{\" \"}\n              (good code — все круто, bad code — сервер получил параметры\n              запуска)\n            </Div>\n\n            <FormLayout>\n              <Input type=\"text\" id=\"url\" />\n\n              <Button size=\"xl\" onClick={this.getImage}>\n                Загрузить\n              </Button>\n            </FormLayout>\n\n            {this.state.image && (\n              <Div style={{ textAlign: \"center\" }}>\n                <img src={this.state.image} alt=\"remote file\" />\n              </Div>\n            )}\n          </Group>\n        </Panel>\n      </View>\n    );\n  }\n}\n\nexport default App;\n","import \"core-js/es6/map\";\nimport \"core-js/es6/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}